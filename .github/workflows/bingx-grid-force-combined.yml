name: BingX Grid — Force Combined (patch & run)

on:
  workflow_dispatch:

jobs:
  patch_and_run:
    runs-on: ubuntu-latest
    env:
      PY_VERSION: "3.11"
      BOT_TOKEN: "0"
      CHAT_ID: "0"
      MIN_RANGE: "1.0"
      MAX_DRIFT: "0.40"
      MAX_CV: "0.60"
      MIN_SCORE: "25"
      FB_MIN_SCORE: "40"
      FB_MAX_CV: "0.60"
      FB_MAX_DRIFT: "0.40"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}

      - name: Install deps
        run: |
          python -m pip install -U pip wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          echo "Deps done"

      - name: Apply runtime patch (force S+NEAR, fix header)
        run: |
          set -euo pipefail
          file="auto_grid_box_finder_pro.py"

          echo "— Patch title_tag"
          sed -i 's/title_tag="ONLY S-GRID"/title_tag="S+NEAR or fallback"/' "$file" || true

          echo "— Patch picks: prefer combined (sgrid+near)"
          # Replace strict sgrid-only pick with combined pick
          sed -i 's/picks=sgrid\[:TOPK\]/picks=(sgrid+near)[:TOPK] if (sgrid or near) else sorted(rows, key=lambda x:x["score"], reverse=True)[:TOPK]/' "$file" || true

          echo "— Patch header exchange label OKX -> BingX"
          sed -i 's/OKX (USDT swap)/BingX (USDT perp)/' "$file" || true

          echo "— Show patched lines context"
          grep -n -E 'S\+NEAR|title_tag|picks=\(|BingX \(USDT perp\)' -n "$file" || true

      - name: Run scans (capture Telegram → STDOUT)
        run: |
          for TF in 5m 15m 1h; do
            echo ">>> Running scan $TF"
            python scan_capture.py --timeframe "$TF" | tee "scan_${TF}.txt"
            echo ">>> PREVIEW scan_${TF}.txt (first 40 lines)"
            sed -n '1,40p' "scan_${TF}.txt" || true
          done

      - name: Filter
        run: |
          for TF in 5m 15m 1h; do
            FTF="$TF"; if [ "$TF" = "5m" ]; then FTF="3m"; fi
            echo "Using filter timeframe: $FTF (from TF=$TF)"
            python grid_filter.py "scan_${TF}.txt" --tf "$FTF"               --min-range "$MIN_RANGE" --max-drift "$MAX_DRIFT" --max-cv "$MAX_CV"               --min-score "$MIN_SCORE" --fb-min-score "$FB_MIN_SCORE"               --fb-max-cv "$FB_MAX_CV" --fb-max-drift "$FB_MAX_DRIFT"               --top 24 --print-okx | tee "filtered_${TF}.txt"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bingx-force-combined-${{ github.run_id }}
          path: |
            scan_5m.txt
            scan_15m.txt
            scan_1h.txt
            filtered_5m.txt
            filtered_15m.txt
            filtered_1h.txt
